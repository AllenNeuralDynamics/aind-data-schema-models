# generated by aind-data-schema-models:
#   filename:  https://raw.githubusercontent.com/harp-tech/protocol/97ded281bd1d0d7537f90ebf545d74cf8ba8805e/whoami.yml
#   timestamp: 2024-08-31 17:01:14.151435


from typing import Annotated, Literal, Union

from pydantic import Field

from aind_data_schema_models.generators._base import _HarpDeviceTypeModel


class Usbhub(_HarpDeviceTypeModel):

    name: Literal["USBHub"] = "USBHub"
    whoami: Literal[256] = 256


class Poke(_HarpDeviceTypeModel):

    name: Literal["Poke"] = "Poke"
    whoami: Literal[1024] = 1024


class Multipwmgenerator(_HarpDeviceTypeModel):

    name: Literal["MultiPwmGenerator"] = "MultiPwmGenerator"
    whoami: Literal[1040] = 1040


class Wear(_HarpDeviceTypeModel):

    name: Literal["Wear"] = "Wear"
    whoami: Literal[1056] = 1056


class Wearbasestationgen2(_HarpDeviceTypeModel):

    name: Literal["WearBaseStationGen2"] = "WearBaseStationGen2"
    whoami: Literal[1058] = 1058


class Driver12volts(_HarpDeviceTypeModel):

    name: Literal["Driver12Volts"] = "Driver12Volts"
    whoami: Literal[1072] = 1072


class Ledcontroller(_HarpDeviceTypeModel):

    name: Literal["LedController"] = "LedController"
    whoami: Literal[1088] = 1088


class Synchronizer(_HarpDeviceTypeModel):

    name: Literal["Synchronizer"] = "Synchronizer"
    whoami: Literal[1104] = 1104


class Inputexpander(_HarpDeviceTypeModel):

    name: Literal["InputExpander"] = "InputExpander"
    whoami: Literal[1106] = 1106


class Outputexpander(_HarpDeviceTypeModel):

    name: Literal["OutputExpander"] = "OutputExpander"
    whoami: Literal[1108] = 1108


class Simpleanaloggenerator(_HarpDeviceTypeModel):

    name: Literal["SimpleAnalogGenerator"] = "SimpleAnalogGenerator"
    whoami: Literal[1121] = 1121


class Archimedes(_HarpDeviceTypeModel):

    name: Literal["Archimedes"] = "Archimedes"
    whoami: Literal[1136] = 1136


class Olfactometer(_HarpDeviceTypeModel):

    name: Literal["Olfactometer"] = "Olfactometer"
    whoami: Literal[1140] = 1140


class Clocksynchronizer(_HarpDeviceTypeModel):

    name: Literal["ClockSynchronizer"] = "ClockSynchronizer"
    whoami: Literal[1152] = 1152


class Timestampgeneratorgen1(_HarpDeviceTypeModel):

    name: Literal["TimestampGeneratorGen1"] = "TimestampGeneratorGen1"
    whoami: Literal[1154] = 1154


class Timestampgeneratorgen3(_HarpDeviceTypeModel):

    name: Literal["TimestampGeneratorGen3"] = "TimestampGeneratorGen3"
    whoami: Literal[1158] = 1158


class Cameracontroller(_HarpDeviceTypeModel):

    name: Literal["CameraController"] = "CameraController"
    whoami: Literal[1168] = 1168


class Cameracontrollergen2(_HarpDeviceTypeModel):

    name: Literal["CameraControllerGen2"] = "CameraControllerGen2"
    whoami: Literal[1170] = 1170


class Pycontroladapter(_HarpDeviceTypeModel):

    name: Literal["PyControlAdapter"] = "PyControlAdapter"
    whoami: Literal[1184] = 1184


class Behavior(_HarpDeviceTypeModel):

    name: Literal["Behavior"] = "Behavior"
    whoami: Literal[1216] = 1216


class Vestibularh1(_HarpDeviceTypeModel):

    name: Literal["VestibularH1"] = "VestibularH1"
    whoami: Literal[1224] = 1224


class Vestibularh2(_HarpDeviceTypeModel):

    name: Literal["VestibularH2"] = "VestibularH2"
    whoami: Literal[1225] = 1225


class Loadcells(_HarpDeviceTypeModel):

    name: Literal["LoadCells"] = "LoadCells"
    whoami: Literal[1232] = 1232


class Analoginput(_HarpDeviceTypeModel):

    name: Literal["AnalogInput"] = "AnalogInput"
    whoami: Literal[1236] = 1236


class Rgbarray(_HarpDeviceTypeModel):

    name: Literal["RgbArray"] = "RgbArray"
    whoami: Literal[1248] = 1248


class Flypad(_HarpDeviceTypeModel):

    name: Literal["FlyPad"] = "FlyPad"
    whoami: Literal[1200] = 1200


class Soundcard(_HarpDeviceTypeModel):

    name: Literal["SoundCard"] = "SoundCard"
    whoami: Literal[1280] = 1280


class Syringepump(_HarpDeviceTypeModel):

    name: Literal["SyringePump"] = "SyringePump"
    whoami: Literal[1296] = 1296


class Neurophotometricsfp3002(_HarpDeviceTypeModel):

    name: Literal["NeurophotometricsFP3002"] = "NeurophotometricsFP3002"
    whoami: Literal[2064] = 2064


class IblBehaviorControl(_HarpDeviceTypeModel):

    name: Literal["Ibl_behavior_control"] = "Ibl_behavior_control"
    whoami: Literal[2080] = 2080


class Rfidreader(_HarpDeviceTypeModel):

    name: Literal["RfidReader"] = "RfidReader"
    whoami: Literal[2094] = 2094


class Pluma(_HarpDeviceTypeModel):

    name: Literal["Pluma"] = "Pluma"
    whoami: Literal[2110] = 2110


class Licketysplit(_HarpDeviceTypeModel):

    name: Literal["LicketySplit"] = "LicketySplit"
    whoami: Literal[1400] = 1400


class Sniffdetector(_HarpDeviceTypeModel):

    name: Literal["SniffDetector"] = "SniffDetector"
    whoami: Literal[1401] = 1401


class Treadmill(_HarpDeviceTypeModel):

    name: Literal["Treadmill"] = "Treadmill"
    whoami: Literal[1402] = 1402


class Cuttlefish(_HarpDeviceTypeModel):

    name: Literal["cuTTLefish"] = "cuTTLefish"
    whoami: Literal[1403] = 1403


class Whiterabbit(_HarpDeviceTypeModel):

    name: Literal["WhiteRabbit"] = "WhiteRabbit"
    whoami: Literal[1404] = 1404


class _HarpDeviceType:

    USBHUB = Usbhub()
    POKE = Poke()
    MULTIPWMGENERATOR = Multipwmgenerator()
    WEAR = Wear()
    WEARBASESTATIONGEN2 = Wearbasestationgen2()
    DRIVER12VOLTS = Driver12volts()
    LEDCONTROLLER = Ledcontroller()
    SYNCHRONIZER = Synchronizer()
    INPUTEXPANDER = Inputexpander()
    OUTPUTEXPANDER = Outputexpander()
    SIMPLEANALOGGENERATOR = Simpleanaloggenerator()
    ARCHIMEDES = Archimedes()
    OLFACTOMETER = Olfactometer()
    CLOCKSYNCHRONIZER = Clocksynchronizer()
    TIMESTAMPGENERATORGEN1 = Timestampgeneratorgen1()
    TIMESTAMPGENERATORGEN3 = Timestampgeneratorgen3()
    CAMERACONTROLLER = Cameracontroller()
    CAMERACONTROLLERGEN2 = Cameracontrollergen2()
    PYCONTROLADAPTER = Pycontroladapter()
    BEHAVIOR = Behavior()
    VESTIBULARH1 = Vestibularh1()
    VESTIBULARH2 = Vestibularh2()
    LOADCELLS = Loadcells()
    ANALOGINPUT = Analoginput()
    RGBARRAY = Rgbarray()
    FLYPAD = Flypad()
    SOUNDCARD = Soundcard()
    SYRINGEPUMP = Syringepump()
    NEUROPHOTOMETRICSFP3002 = Neurophotometricsfp3002()
    IBL_BEHAVIOR_CONTROL = IblBehaviorControl()
    RFIDREADER = Rfidreader()
    PLUMA = Pluma()
    LICKETYSPLIT = Licketysplit()
    SNIFFDETECTOR = Sniffdetector()
    TREADMILL = Treadmill()
    CUTTLEFISH = Cuttlefish()
    WHITERABBIT = Whiterabbit()

    ALL = tuple(_HarpDeviceTypeModel.__subclasses__())
    ONE_OF = Annotated[Union[ALL], Field(discriminator="name")]
